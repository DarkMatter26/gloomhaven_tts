local button_parameters = {}
button_parameters.click_function = 'read'
button_parameters.function_owner = self
button_parameters.label = 'ENCODE CARD'
button_parameters.position = {-1, 0.3, 2}
button_parameters.rotation = {0, 0, 0}
button_parameters.width = 700
button_parameters.height = 400
button_parameters.font_size = 100
self.createButton(button_parameters)

local button_parameters = {}
button_parameters.click_function = 'readClean'
button_parameters.function_owner = self
button_parameters.label = 'CLEAN ENCODE'
button_parameters.position = {1, 0.3, 2}
button_parameters.rotation = {0, 0, 0}
button_parameters.width = 700
button_parameters.height = 400
button_parameters.font_size = 100
self.createButton(button_parameters)

function read()
  clean = false
  processMonsterCard()
end

function readClean()
  clean = true
  processMonsterCard()
end

function processMonsterCard()
  mcardscript=nil
  loc=self.getPosition()
  procobjects={}
  cmproperties=nil
  cardobjtype=nil
  allobjects=getAllObjects()
  rcds=0
  for i,v in ipairs(allobjects) do
    pos=v.getPosition()
    d=distance(pos.x,pos.z,loc.x,loc.z)
    if (d<=7 and v.tag ~= 'Board' and v.guid~=self.guid) then
      table.insert(procobjects,v) rcds=rcds+1
    end
  end
  if rcds==0 then print('Nothing here to process!') return
  else
    for i,v in pairs(procobjects) do
      if v.name == 'Custom_Model' and v.tag ~= 'Board' then
        cmproperties=v.getCustomObject()
        cardobj=cmproperties['mesh']
        carddiffuse=cmproperties['diffuse']
        cardnormal=cmproperties['normal']
        cardcollide=cmproperties['collider']
        cardmaterial=cmproperties['material']
        if cmproperties['convex'] then cardconvex='true' else cardconvex='false' end
        cardclr=v.getColorTint()
        cardr=cardclr['r']
        cardg=cardclr['g']
        cardb=cardclr['b']
        cardscaletbl=v.getScale()
        globalscale=Global.getVar('globalscale')
        if globalscale==nil then globalscale=2 end
        cardscale=cardscaletbl['y']/globalscale
        cardname=v.getName()
        carddesc=v.getDescription()
        if clean == false then cardoriglua=v.getLuaScript() else cardoriglua=[[]] end
      elseif string.find(v.name,'Custom')==nil and v.tag~='Board' and v.tag~='Card' then
        cardobjtype=v.name
        cardclr=v.getColorTint()
        cardr=cardclr['r']
        cardg=cardclr['g']
        cardb=cardclr['b']
        cardscaletbl=v.getScale()
        globalscale=Global.getVar('globalscale')
        if globalscale==nil then globalscale=2 end
        cardscale=cardscaletbl['y']/globalscale
        cardname=v.getName()
        carddesc=v.getDescription()
        if clean == false then cardoriglua=v.getLuaScript() else cardoriglua=[[]] end
      end
    end
  end
  if not cmproperties and not cardobjtype then print('No valid model to process!') return end
  for i,v in pairs(procobjects) do
    mcardscript='function onload()\n'
    if v.tag == 'Card' then
      if cmproperties then
        mcardscript=mcardscript .. 'cardobj=\'' .. cardobj .. '\'\n'
        mcardscript=mcardscript .. 'carddiffuse=\'' .. carddiffuse .. '\'\n'
        mcardscript=mcardscript .. 'cardnormal=\'' .. cardnormal .. '\'\n'
        mcardscript=mcardscript .. 'cardcollide=\'' .. cardcollide .. '\'\n'
        mcardscript=mcardscript .. 'cardconvex=\'' .. cardconvex .. '\'\n'
        mcardscript=mcardscript .. 'cardmaterial=' .. cardmaterial .. '\n'
        mcardscript=mcardscript .. 'cardr=' .. cardr .. '\n'
        mcardscript=mcardscript .. 'cardg=' .. cardg .. '\n'
        mcardscript=mcardscript .. 'cardb=' .. cardb .. '\n'
        mcardscript=mcardscript .. 'cardscale=' .. cardscale .. '\n'
        mcardscript=mcardscript .. 'cardoriglua=\[\[' .. cardoriglua .. '\]\]\n'
        mcardscript=mcardscript .. 'cardname=\[\[' .. cardname .. '\]\]\n'
        mcardscript=mcardscript .. 'carddesc=\[\[' .. carddesc .. '\]\]\n\n'
      elseif cardobjtype then
        mcardscript=mcardscript .. 'cardobjtype=\'' .. cardobjtype .. '\'\n'
        mcardscript=mcardscript .. 'cardr=' .. cardr .. '\n'
        mcardscript=mcardscript .. 'cardg=' .. cardg .. '\n'
        mcardscript=mcardscript .. 'cardb=' .. cardb .. '\n'
        mcardscript=mcardscript .. 'cardscale=' .. cardscale .. '\n'
        mcardscript=mcardscript .. 'cardoriglua=\[\[' .. cardoriglua .. '\]\]\n'
        mcardscript=mcardscript .. 'cardname=\[\[' .. cardname .. '\]\]\n'
        mcardscript=mcardscript .. 'carddesc=\[\[' .. carddesc .. '\]\]\n\n'
      end
      mcardscript=mcardscript .. [[
        local button_parameters = {}
        button_parameters.click_function = 'spawnCardObject'
        button_parameters.label = 'X'
        button_parameters.function_owner = self
        button_parameters.position = {0.85, 0.3, -1.35}
        button_parameters.rotation = {0, 0, 0}
        button_parameters.width = 150
        button_parameters.height = 150
        button_parameters.font_size = 80
        self.createButton(button_parameters)
      end

      function spawnCardObject(info)
       pos = self.getPosition()
       self.clearButtons()
       globalscale=Global.getVar('globalscale')
       if globalscale==nil then globalscale=2 end
       local obj = {}
       if type(info)=='userdata' then
         obj.position = {pos['x'],pos['y']+1,pos['z']}
         putscale=1
       else
         obj.position = {info[1],info[2],info[3]}
         putscale=info[4]
       end
       if cardobj then
         obj.type = 'Custom_Model'
         local spawnedCardObject = spawnObject(obj)
         local mesh = {}
         mesh.mesh = cardobj
         mesh.diffuse = carddiffuse
         mesh.collider = cardcollide
         mesh.normal = cardnormal
         mesh.convex = cardconvex
         mesh.material = cardmaterial
         spawnedCardObject.setCustomObject(mesh)
         spawnedCardObject.setColorTint({cardr,cardg,cardb})
         spawnedCardObject.setScale({cardscale*globalscale*putscale,cardscale*globalscale*putscale,cardscale*globalscale*putscale})
         spawnedCardObject.setName(cardname)
         spawnedCardObject.setDescription(carddesc)
         spawnedCardObject.setLuaScript('objtype = \'mini\'\nmcardguid = \'' .. self.getGUID() .. '\'\n'..cardoriglua)
       elseif cardobjtype then
         obj.type = cardobjtype
         local spawnedCardObject = spawnObject(obj)
         spawnedCardObject.setColorTint({cardr,cardg,cardb})
         spawnedCardObject.setScale({cardscale*globalscale*putscale,cardscale*globalscale*putscale,cardscale*globalscale*putscale})
         spawnedCardObject.setName(cardname)
         spawnedCardObject.setDescription(carddesc)
         spawnedCardObject.setLuaScript('objtype = \'mini\'\nmcardguid = \'' .. self.getGUID() .. '\'\n'..cardoriglua)
       end
      end
            ]]
      v.setLuaScript(mcardscript)
      print('CARD ENCODED')
    end
  end
end

function distance ( x, y, x2, y2 )
  local dx, dy = x2 - x, y2 - y
  return math.sqrt ( dx * dx + dy * dy )
end